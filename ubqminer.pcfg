# ==================================================================
#       .__
#______ |__| _____ ______  Portable Instant Mining Platform
#\____ \|  |/     \____  \      by miners, for miners.
#|  |_> >  |  Y Y  \  |_> >
#|   __/|__|__|_|  /   __/   Support: forum.getpimp.org
#|__|            \/|__|          https://getPiMP.org
#
#
# Copyright (c) 2018 getPiMP.org.  All Rights Reserved.
# License: This code is licensed for use with getPiMP.org only.
# Description: PIMP CLI miner module config file.
# A .pcfg is a specially formatted PIMP Config mining profile.
# This file makes it easy for you to pick your wallet and pool
# and mine to it with this miner. 
# ==================================================================
# Profile Description:
#
# Mine UBIQ with their ethminer fork
 
#  PLEASE TAKE PRECAUTIONS AND TEST THOROUGHLY SO YOU DO NOT BURN OR DAMAGE
#  YOUR HARDWARE. PIMP ASSUMES NO LIABILITY FOR ANY DAMAGES CAUSED BY MINING.
# ==================================================================

# NAME = This is the way the miner will appear in miner farm
NAME=ubqminer
USER1=pimp # needed for ubqminer compatibility with miner.farm

# PRIMARY/ETH/ETC/UBQ POOLS:
# ---------------------------------------------------------------------
# PRIMARY POOL INFORMATION: Put your ETHASH pool and wallet here.
# POOL1 is in form protocol://username:password@url:port

# UBIQ (UBQ) on HodlPool (POOL1 is Wallet.Worker@Pool:Port)
  POOL1=stratum1+tcp://0x6637ad6077ba88c14e8d9ed716305ba02f4cfe78.PimpWorker@ubiq.hodlpool.com:8009 

# UBIQ (UBQ) on MinerPool (POOL1 is Wallet.Worker@Pool:Port)
#  POOL1=stratum1+tcp://0x6637ad6077ba88c14e8d9ed716305ba02f4cfe78.PimpWorker@lb.geo.ubiqpool.org:8001


# ---------------------------------------------------------------------
# COMMAND LINE PARAMETERS:
# Here is where you can add command line parameters such as intensity and mining modes.
# NOTE: the pool/wallet/algo settings are set by PIMP. Set those above.

FLAGS=-X --farm-recheck 2000 

# Mining configuration:
#    -G,--opencl  When mining use the GPU via OpenCL.
#    --opencl-platform <n>  When mining using -G/--opencl use OpenCL platform n (default: 0).
#    --opencl-device <n>  When mining using -G/--opencl use OpenCL device n (default: 0).
#    --opencl-devices <0 1 ..n> Select which OpenCL devices to mine on. Default is to use all
#    -t, --mining-threads <n> Limit number of CPU/GPU miners to n (default: use everything available on selected platform)
#    -L, --dag-load-mode <mode> DAG generation mode.
#        parallel    - load DAG on all GPUs at the same time (default)
#        sequential  - load DAG on GPUs one after another. Use this when the miner crashes during DAG generation
#        single <n>  - generate DAG on device n, then copy to other devices
# OpenCL configuration:
#    --cl-kernel <n>  Use a different OpenCL kernel (default: use stable kernel)
#        0: stable kernel
#        1: unstable kernel
#    --cl-local-work Set the OpenCL local work size. Default is 128
#    --cl-global-work Set the OpenCL global work size as a multiple of the local work size. Default is 8192 * 128
#    --cl-parallel-hash <1 2 ..8> Define how many threads to associate per hash. Default=8

# ==================================================================
# INTERNAL USE ONLY: modification below here is unadvised 
TYPE=GPU
DIR=ubqminer
BINARY=ubqminer
CONF=p1:P
API=-api-port
